// Generated by gencpp from file nist_gear/SubmitTray.msg
// DO NOT EDIT!


#ifndef NIST_GEAR_MESSAGE_SUBMITTRAY_H
#define NIST_GEAR_MESSAGE_SUBMITTRAY_H

#include <ros/service_traits.h>


#include <nist_gear/SubmitTrayRequest.h>
#include <nist_gear/SubmitTrayResponse.h>


namespace nist_gear
{

struct SubmitTray
{

typedef SubmitTrayRequest Request;
typedef SubmitTrayResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SubmitTray
} // namespace nist_gear


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::nist_gear::SubmitTray > {
  static const char* value()
  {
    return "02ca9d3d33cd5aa38b11d30b6d8538ae";
  }

  static const char* value(const ::nist_gear::SubmitTray&) { return value(); }
};

template<>
struct DataType< ::nist_gear::SubmitTray > {
  static const char* value()
  {
    return "nist_gear/SubmitTray";
  }

  static const char* value(const ::nist_gear::SubmitTray&) { return value(); }
};


// service_traits::MD5Sum< ::nist_gear::SubmitTrayRequest> should match
// service_traits::MD5Sum< ::nist_gear::SubmitTray >
template<>
struct MD5Sum< ::nist_gear::SubmitTrayRequest>
{
  static const char* value()
  {
    return MD5Sum< ::nist_gear::SubmitTray >::value();
  }
  static const char* value(const ::nist_gear::SubmitTrayRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::nist_gear::SubmitTrayRequest> should match
// service_traits::DataType< ::nist_gear::SubmitTray >
template<>
struct DataType< ::nist_gear::SubmitTrayRequest>
{
  static const char* value()
  {
    return DataType< ::nist_gear::SubmitTray >::value();
  }
  static const char* value(const ::nist_gear::SubmitTrayRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::nist_gear::SubmitTrayResponse> should match
// service_traits::MD5Sum< ::nist_gear::SubmitTray >
template<>
struct MD5Sum< ::nist_gear::SubmitTrayResponse>
{
  static const char* value()
  {
    return MD5Sum< ::nist_gear::SubmitTray >::value();
  }
  static const char* value(const ::nist_gear::SubmitTrayResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::nist_gear::SubmitTrayResponse> should match
// service_traits::DataType< ::nist_gear::SubmitTray >
template<>
struct DataType< ::nist_gear::SubmitTrayResponse>
{
  static const char* value()
  {
    return DataType< ::nist_gear::SubmitTray >::value();
  }
  static const char* value(const ::nist_gear::SubmitTrayResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NIST_GEAR_MESSAGE_SUBMITTRAY_H
